version: '3.9'

services:
  capy-core-database:
    image: postgres:16
    container_name: capy-core-database
    restart: always
    ports:
      - '6968:5432'
    env_file:
      - ./backend/core/.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - capy-world-network

  capy-core-server:
    build:
      context: ./backend/core
      dockerfile: ./Dockerfile
      target: dev
    container_name: capy_core_server
    command: sh -c "./entrypoint.sh"
    restart: always
    ports:
      - '6969:6969'
    env_file:
      - ./backend/core/.env
    volumes:
      - ./backend/core/src:/app/backend/core/src
      - ./backend/core/config:/app/backend/core/config
      - static-data:/app/backend/core/config/static
      - media-data:/app/backend/core/config/media
    networks:
      - capy-world-network

  capy-ws-server:
    build:
      context: ./backend/ws-server
      dockerfile: ./Dockerfile
      target: dev
    container_name: capy_ws_server
    command: sh -c "./entrypoint.sh"
    restart: always
    ports:
      - '6967:6969'
    env_file:
      - ./backend/ws-server/.env
    volumes:
      - ./backend/ws-server/src:/app/backend/ws/src
      - ./backend/ws-server/config:/app/backend/ws/config
      - ./backend/ws-server/main.py:/app/backend/ws/main.py
      - ./backend/ws-server/logs:/app/backend/ws/logs
    networks:
      - capy-world-network

  capy-core-nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
      target: dev
    container_name: nginx
    restart: always
    ports:
      - '80:8080'
    volumes:
      - static-data:/app/backend/core/config/static
      - media-data:/app/backend/core/config/media
    networks:
      - capy-world-network

  capy-core-rabbitmq:
    image: rabbitmq:3.13.1-management
    container_name: capy-core-rabbitmq
    ports:
      - "15627:15672"
      - "5672:5672"
    env_file:
      - ./backend/ws-server/.env
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - capy-world-network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  pg_data:
  static-data:
  media-data:
  rabbitmq:

networks:
  capy-world-network:
    driver: bridge
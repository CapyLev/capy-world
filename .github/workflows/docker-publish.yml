name: Docker

on:
  push:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  CORE_IMAGE_NAME: nnnxion/capy-world-core
  BIBOON_IMAGE_NAME: nnnxion/capy-world-biboon
  NGINX_IMAGE_NAME: nnnxion/capy-world-nginx
  REDIS_IMAGE_NAME: nnnxion/capy-world-redis
  TAG: latest

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for core
        id: meta-core
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.CORE_IMAGE_NAME }}

      - name: Build and push Docker image for core
        id: build-and-push-core
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./backend/core
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-core.outputs.tags }}
          labels: ${{ steps.meta-core.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: prod

      - name: Extract Docker metadata for biboon
        id: meta-biboon
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.BIBOON_IMAGE_NAME }}

      - name: Build and push Docker image for biboon
        id: build-and-push-biboon
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./backend/biboon
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-biboon.outputs.tags }}
          labels: ${{ steps.meta-biboon.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: prod

      - name: Extract Docker metadata for nginx
        id: meta-nginx
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}

      - name: Build and push Docker image for nginx
        id: build-and-push-nginx
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./nginx
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-nginx.outputs.tags }}
          labels: ${{ steps.meta-nginx.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: prod

      - name: Extract Docker metadata for redis
        id: meta-redis
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.REDIS_IMAGE_NAME }}

      - name: Build and push Docker image for redis
        id: build-and-push-redis
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./redis
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-redis.outputs.tags }}
          labels: ${{ steps.meta-redis.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker images
        if: ${{ github.event_name != 'pull_request' }}
        env:
          CORE_TAGS: ${{ steps.meta-core.outputs.tags }}
          CORE_DIGEST: ${{ steps.build-and-push-core.outputs.digest }}
          BIBOON_TAGS: ${{ steps.meta-biboon.outputs.tags }}
          BIBOON_DIGEST: ${{ steps.build-and-push-biboon.outputs.digest }}
          NGINX_TAGS: ${{ steps.meta-nginx.outputs.tags }}
          NGINX_DIGEST: ${{ steps.build-and-push-nginx.outputs.digest }}
          REDIS_TAGS: ${{ steps.meta-redis.outputs.tags }}
          REDIS_DIGEST: ${{ steps.build-and-push-redis.outputs.digest }}
        run: |
          echo "${CORE_TAGS}" | xargs -I {} cosign sign --yes {}@${CORE_DIGEST}
          echo "${BIBOON_TAGS}" | xargs -I {} cosign sign --yes {}@${BIBOON_DIGEST}
          echo "${NGINX_TAGS}" | xargs -I {} cosign sign --yes {}@${NGINX_DIGEST}
          echo "${REDIS_TAGS}" | xargs -I {} cosign sign --yes {}@${REDIS_DIGEST}
